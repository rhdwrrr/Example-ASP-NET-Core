// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrigamiEdu.Models;

namespace OrigamiEdu.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220624025811_Slate")]
    partial class Slate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OrigamiEdu.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("bannedUntil")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("fkSekolahID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("isSetupInProgress")
                        .HasColumnType("bit");

                    b.Property<DateTime>("joinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("jurusanSekolah")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("setupType")
                        .HasColumnType("int");

                    b.Property<double>("tryOutTokens")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("fkSekolahID");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("OrigamiEdu.Models.KabupatenKota", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("fkProvinsiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kabupatenKota")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("fkProvinsiID");

                    b.ToTable("KabupatenKotas");
                });

            modelBuilder.Entity("OrigamiEdu.Models.KabupatenKotaDump", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("kabupatenKota")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("kabupatenKotaDumps");
                });

            modelBuilder.Entity("OrigamiEdu.Models.KategoriSekolah", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("namaKategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("kategoriSekolahs");
                });

            modelBuilder.Entity("OrigamiEdu.Models.KategoriUniversitas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("katgUniv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("kategoriUniversitas");
                });

            modelBuilder.Entity("OrigamiEdu.Models.Provinsi", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("provinsi")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("ID");

                    b.ToTable("Provinsis");
                });

            modelBuilder.Entity("OrigamiEdu.Models.ProvinsiDump", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("provinsi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("provinsiDumps");
                });

            modelBuilder.Entity("OrigamiEdu.Models.Sekolah", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("fkKabupatenKotaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("fkKategoriSekolahID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("sekolah")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("fkKabupatenKotaID");

                    b.HasIndex("fkKategoriSekolahID");

                    b.ToTable("Sekolahs");
                });

            modelBuilder.Entity("OrigamiEdu.Models.SekolahDump", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("sekolah")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("sekolahDumps");
                });

            modelBuilder.Entity("OrigamiEdu.Models.Universitas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("fkKategoriUniversitasID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("fkProvinsiID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("universitas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("fkKategoriUniversitasID");

                    b.HasIndex("fkProvinsiID");

                    b.ToTable("universitas");
                });

            modelBuilder.Entity("OrigamiEdu.Models.UniversitasDump", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("universitas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("universitasDumps");
                });

            modelBuilder.Entity("OrigamiEdu.Models.adminNotification", b =>
                {
                    b.Property<string>("adminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSeen")
                        .HasColumnType("bit");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("adminId");

                    b.ToTable("adminNotifications");
                });

            modelBuilder.Entity("OrigamiEdu.Models.classParticipant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("accountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("bannedUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("fkKelasID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isBannedToPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isCreator")
                        .HasColumnType("bit");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("accountId");

                    b.HasIndex("fkKelasID");

                    b.ToTable("classParticipants");
                });

            modelBuilder.Entity("OrigamiEdu.Models.dumpedUserFromClass", b =>
                {
                    b.Property<string>("accountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("banUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("fkkelasID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2");

                    b.HasIndex("accountId");

                    b.HasIndex("fkkelasID");

                    b.ToTable("dumpedUserFromClasses");
                });

            modelBuilder.Entity("OrigamiEdu.Models.kelas", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fkCreatorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isAllowedToPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("isPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("userGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("fkCreatorId");

                    b.ToTable("kelas");
                });

            modelBuilder.Entity("OrigamiEdu.Models.notification", b =>
                {
                    b.Property<string>("info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSeen")
                        .HasColumnType("bit");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unameInvolved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("userId");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("OrigamiEdu.Models.statistikUniversitas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("fkUnivID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("kuota")
                        .HasColumnType("float");

                    b.Property<double>("peminat")
                        .HasColumnType("float");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("fkUnivID");

                    b.ToTable("statistikUnivs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrigamiEdu.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrigamiEdu.Models.AppUser", b =>
                {
                    b.HasOne("OrigamiEdu.Models.Sekolah", "fkSekolah")
                        .WithMany()
                        .HasForeignKey("fkSekolahID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fkSekolah");
                });

            modelBuilder.Entity("OrigamiEdu.Models.KabupatenKota", b =>
                {
                    b.HasOne("OrigamiEdu.Models.Provinsi", "fkProvinsi")
                        .WithMany()
                        .HasForeignKey("fkProvinsiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fkProvinsi");
                });

            modelBuilder.Entity("OrigamiEdu.Models.Sekolah", b =>
                {
                    b.HasOne("OrigamiEdu.Models.KabupatenKota", "fkKabupatenKota")
                        .WithMany()
                        .HasForeignKey("fkKabupatenKotaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OrigamiEdu.Models.KategoriSekolah", "fkKategoriSekolah")
                        .WithMany()
                        .HasForeignKey("fkKategoriSekolahID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fkKabupatenKota");

                    b.Navigation("fkKategoriSekolah");
                });

            modelBuilder.Entity("OrigamiEdu.Models.Universitas", b =>
                {
                    b.HasOne("OrigamiEdu.Models.KategoriUniversitas", "fkKategoriUniversitas")
                        .WithMany()
                        .HasForeignKey("fkKategoriUniversitasID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OrigamiEdu.Models.Provinsi", "fkProvinsi")
                        .WithMany()
                        .HasForeignKey("fkProvinsiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fkKategoriUniversitas");

                    b.Navigation("fkProvinsi");
                });

            modelBuilder.Entity("OrigamiEdu.Models.adminNotification", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", "admin")
                        .WithMany()
                        .HasForeignKey("adminId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("admin");
                });

            modelBuilder.Entity("OrigamiEdu.Models.classParticipant", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OrigamiEdu.Models.kelas", "fkKelas")
                        .WithMany()
                        .HasForeignKey("fkKelasID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("account");

                    b.Navigation("fkKelas");
                });

            modelBuilder.Entity("OrigamiEdu.Models.dumpedUserFromClass", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OrigamiEdu.Models.kelas", "fkkelas")
                        .WithMany()
                        .HasForeignKey("fkkelasID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("account");

                    b.Navigation("fkkelas");
                });

            modelBuilder.Entity("OrigamiEdu.Models.kelas", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", "fkCreator")
                        .WithMany()
                        .HasForeignKey("fkCreatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fkCreator");
                });

            modelBuilder.Entity("OrigamiEdu.Models.notification", b =>
                {
                    b.HasOne("OrigamiEdu.Models.AppUser", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("user");
                });

            modelBuilder.Entity("OrigamiEdu.Models.statistikUniversitas", b =>
                {
                    b.HasOne("OrigamiEdu.Models.Universitas", "fkUniv")
                        .WithMany()
                        .HasForeignKey("fkUnivID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fkUniv");
                });
#pragma warning restore 612, 618
        }
    }
}
